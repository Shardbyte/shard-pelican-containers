name: build images

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches:
      - main
    paths:
      - images/**

permissions:
  packages: write
  contents: read

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - name: "ARKManager"
            image: arkmanager
            variant: alpha
            dockerfile: Dockerfile.alpha
            tags: |
              ghcr.io/shardbyte/arkmanager:alpha
              docker.io/shardbyte/arkmanager:alpha
          - name: "ARKManager Enhanced"
            image: arkmanager
            variant: enhanced
            dockerfile: Dockerfile.enhanced
            tags: |
              ghcr.io/shardbyte/arkmanager:enhanced
              docker.io/shardbyte/arkmanager:enhanced
              ghcr.io/shardbyte/arkmanager:latest
              docker.io/shardbyte/arkmanager:latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Detect changes
        id: changes
        uses: dorny/paths-filter@v3
        with:
          list-files: json
          filters: |
            build:
              - images/${{ matrix.image }}/**

      - name: Repository owner to lowercase
        if: steps.changes.outputs.build == 'true'
        id: lower-repo
        run: echo "repository=$(echo $GITHUB_REPOSITORY_OWNER | tr '[:upper:]' '[:lower:]')" >> $GITHUB_OUTPUT

      - name: Setup Docker Buildx
        if: steps.changes.outputs.build == 'true'
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: steps.changes.outputs.build == 'true'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Login to Docker Hub
        if: steps.changes.outputs.build == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        if: steps.changes.outputs.build == 'true'
        uses: docker/build-push-action@v6
        with:
          context: ./images/${{ matrix.image }}
          file: ./images/${{ matrix.image }}/${{ matrix.dockerfile }}
          platforms: linux/amd64
          push: true
          provenance: false
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: |
            ${{ matrix.tags }}
